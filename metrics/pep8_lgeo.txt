directory lgeo
checking lgeo/__init__.py
checking lgeo/lgeo_city.py
directory lgeo/include
checking lgeo/include/__init__.py
directory lgeo/include/brick
checking lgeo/include/brick/__init__.py
checking lgeo/include/brick/lg_2412b.py
checking lgeo/include/brick/lg_2441.py
checking lgeo/include/brick/lg_3003.py
checking lgeo/include/brick/lg_3010.py
lgeo/include/brick/lg_3010.py:16:80: E501 line too long (82 > 79 characters)
    Limit all lines to a maximum of 79 characters.

    There are still many devices around that are limited to 80 character
    lines; plus, limiting windows to 80 characters makes it possible to have
    several windows side-by-side.  The default wrapping on such devices looks
    ugly.  Therefore, please limit all lines to a maximum of 79 characters.
    For flowing long blocks of text (docstrings or comments), limiting the
    length to 72 characters is recommended.

    Reports error E501.
checking lgeo/include/brick/lg_3022.py
lgeo/include/brick/lg_3022.py:211:17: E131 continuation line unaligned for hanging indent
    Continuation lines indentation.

    Continuation lines should align wrapped elements either vertically
    using Python's implicit line joining inside parentheses, brackets
    and braces, or using a hanging indent.

    When using a hanging indent these considerations should be applied:
    - there should be no arguments on the first line, and
    - further indentation should be used to clearly distinguish itself as a
      continuation line.

    Okay: a = (\n)
    E123: a = (\n    )

    Okay: a = (\n    42)
    E121: a = (\n   42)
    E122: a = (\n42)
    E123: a = (\n    42\n    )
    E124: a = (24,\n     42\n)
    E125: if (\n    b):\n    pass
    E126: a = (\n        42)
    E127: a = (24,\n      42)
    E128: a = (24,\n    42)
    E129: if (a or\n    b):\n    pass
    E131: a = (\n    42\n 24)
lgeo/include/brick/lg_3022.py:213:13: E131 continuation line unaligned for hanging indent
    Continuation lines indentation.

    Continuation lines should align wrapped elements either vertically
    using Python's implicit line joining inside parentheses, brackets
    and braces, or using a hanging indent.

    When using a hanging indent these considerations should be applied:
    - there should be no arguments on the first line, and
    - further indentation should be used to clearly distinguish itself as a
      continuation line.

    Okay: a = (\n)
    E123: a = (\n    )

    Okay: a = (\n    42)
    E121: a = (\n   42)
    E122: a = (\n42)
    E123: a = (\n    42\n    )
    E124: a = (24,\n     42\n)
    E125: if (\n    b):\n    pass
    E126: a = (\n        42)
    E127: a = (24,\n      42)
    E128: a = (24,\n    42)
    E129: if (a or\n    b):\n    pass
    E131: a = (\n    42\n 24)
lgeo/include/brick/lg_3022.py:215:9: E113 unexpected indentation
    Use 4 spaces per indentation level.

    For really old code that you don't want to mess up, you can continue to
    use 8-space tabs.

    Okay: a = 1
    Okay: if a == 0:\n    a = 1
    E111:   a = 1

    Okay: for item in items:\n    pass
    E112: for item in items:\npass

    Okay: a = 1\nb = 2
    E113: a = 1\n    b = 2
lgeo/include/brick/lg_3022.py:479:1: E901 TokenError: EOF in multi-line statement
    Check if the syntax is valid.
checking lgeo/include/brick/lg_3788.py
directory lgeo/include/common
checking lgeo/include/common/__init__.py
checking lgeo/include/common/brick_subparts.py
checking lgeo/include/common/custom_macros.py
checking lgeo/include/common/lg_color.py
checking lgeo/include/common/lg_defs.py
directory lgeo/config
checking lgeo/config/__init__.py
checking lgeo/config/lgeo_cfg.py
directory lgeo/set
checking lgeo/set/__init__.py
checking lgeo/set/lg_10036_1_car.py
checking lgeo/set/lg_10036_1_house.py
checking lgeo/set/lg_10036_1_main.py
1       E113 unexpected indentation
2       E131 continuation line unaligned for hanging indent
1       E501 line too long (82 > 79 characters)
1       E901 TokenError: EOF in multi-line statement
